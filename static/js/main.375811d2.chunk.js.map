{"version":3,"sources":["components/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","withInfo","onPageChange","amountPage","Math","ceil","perPageStart","perPageEnd","arrPages","Array","from","keys","className","type","disabled","onClick","map","el","currPage","classNames","active","defaultProps","App","state","pageNum","setState","onPerPageChange","value","this","name","id","onChange","e","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gPAWaA,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MAKI,IAJJC,eAII,MAJM,EAIN,MAHJC,YAGI,MAHG,EAGH,MAFJC,gBAEI,SADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKP,EAAQC,GAC/BO,EAAeP,GAAWC,EAAO,GAAK,EACtCO,EAAaP,IAASG,EAAaL,GAASE,EAAO,GAAKD,EAAUA,EAClES,EAAWC,MAAMC,KAAKD,MAAMN,GAAYQ,QAE9C,OACE,sBAAK,aAAW,0BAAhB,UACGV,GACC,sBAAKW,UAAU,kBAAf,UACGN,EACA,MACAC,EACA,OACAT,KAGL,qBAAIc,UAAU,aAAd,UACE,oBAAIA,UAAU,YAAd,SACE,wBACEC,KAAK,SACLD,UAAU,YACV,aAAW,WACXE,SAAmB,IAATd,EACVe,QAAS,kBAAMb,EAAaF,EAAO,IALrC,SAOE,sBAAM,cAAY,OAAlB,sBAIHQ,EAASQ,KAAI,SAAAC,GACZ,IAAMC,EAAWD,EAAK,EAEtB,OAAIjB,IAASkB,GACRlB,IAASiB,GACTjB,IAASkB,EAAW,GACpBlB,IAASkB,EAAW,GACpBlB,IAASkB,EAAW,EAGrB,oBACEN,UAAWO,IAAW,YAAa,CAAEC,OAAQF,IAAalB,IAD5D,SAKIA,IAASkB,EAAW,GAAKlB,IAASkB,EAAW,EAEzC,qBAAKN,UAAU,YAAf,iBAKA,wBACEC,KAAK,SACLD,UAAU,YACVG,QAAS,kBAAMb,EAAagB,IAC5BJ,SAAUd,IAASkB,EAAW,GAAKlB,IAASkB,EAAW,EAJzD,SAMGlB,IAASkB,EAAW,GAAKlB,IAASkB,EAAW,EAAI,MAAQA,KAhB7DD,GAwBJ,QAGT,oBAAIL,UAAU,YAAd,SACE,wBACEC,KAAK,SACLD,UAAU,YACV,aAAW,OACXE,SAAUd,IAASG,EACnBY,QAAS,kBAAMb,EAAaF,EAAO,IALrC,SAOE,sBAAM,cAAY,OAAlB,6BAQZH,EAAWwB,aAAe,CACxBtB,QAAS,EACTC,KAAM,EACNC,UAAU,G,IC/FNqB,E,4MACJC,MAAe,CACbzB,MAAO,GACPC,QAAS,EACTC,KAAM,G,EAGRE,aAAe,SAACsB,GACd,EAAKC,SAAS,CAAEzB,KAAMwB,K,EAGxBE,gBAAkB,SAACC,GACjB,EAAKF,SAAS,CACZ1B,QAAS4B,EACT3B,KAAM,K,4CAIV,WAAU,IAAD,OACP,EAAiC4B,KAAKL,MAA9BzB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,KAExB,OACE,sBAAKY,UAAU,UAAf,UACE,4CAEA,qBAAKA,UAAU,SAAf,SACE,gCACE,4CACA,yBACEiB,KAAK,UACLC,GAAG,UACHH,MAAO5B,EACPgC,SAAU,SAACC,GACT,EAAKN,iBAAiBM,EAAEC,OAAON,QALnC,UAQE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,wBAKN,cAAC,EAAD,CACE7B,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,UAAQ,EACRC,aAAc0B,KAAK1B,sB,GAjDXgC,IAAMC,WAwDTb,IC/Dfc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.375811d2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage?: number;\n  page?: number;\n  withInfo?: boolean;\n  onPageChange: (pageNum: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage = 5,\n  page = 1,\n  withInfo = false,\n  onPageChange,\n}) => {\n  const amountPage = Math.ceil(total / perPage);\n  const perPageStart = perPage * (page - 1) + 1;\n  const perPageEnd = page === amountPage ? total : (page - 1) * perPage + perPage;\n  const arrPages = Array.from(Array(amountPage).keys());\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      {withInfo && (\n        <div className=\"pagination-info\">\n          {perPageStart}\n          {' - '}\n          {perPageEnd}\n          {' of '}\n          {total}\n        </div>\n      )}\n      <ul className=\"pagination\">\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            className=\"page-link\"\n            aria-label=\"Previous\"\n            disabled={page === 1}\n            onClick={() => onPageChange(page - 1)}\n          >\n            <span aria-hidden=\"true\">&laquo;</span>\n          </button>\n        </li>\n\n        {arrPages.map(el => {\n          const currPage = el + 1;\n\n          if (page === currPage\n            || page === el\n            || page === currPage + 1\n            || page === currPage + 2\n            || page === currPage - 2\n          ) {\n            return (\n              <li\n                className={classNames('page-item', { active: currPage === page })}\n                key={el}\n              >\n                {\n                  page === currPage + 2 || page === currPage - 2\n                    ? (\n                      <div className=\"page-link\">\n                        ...\n                      </div>\n                    )\n                    : (\n                      <button\n                        type=\"button\"\n                        className=\"page-link\"\n                        onClick={() => onPageChange(currPage)}\n                        disabled={page === currPage + 2 || page === currPage - 2}\n                      >\n                        {page === currPage + 2 || page === currPage - 2 ? '...' : currPage}\n                      </button>\n                    )\n                }\n              </li>\n            );\n          }\n\n          return null;\n        })}\n\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            className=\"page-link\"\n            aria-label=\"Next\"\n            disabled={page === amountPage}\n            onClick={() => onPageChange(page + 1)}\n          >\n            <span aria-hidden=\"true\">&raquo;</span>\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nPagination.defaultProps = {\n  perPage: 5,\n  page: 1,\n  withInfo: false,\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\ntype State = {\n  total: number;\n  perPage: number;\n  page: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  };\n\n  onPageChange = (pageNum: number) => {\n    this.setState({ page: pageNum });\n  };\n\n  onPerPageChange = (value: number) => {\n    this.setState({\n      perPage: value,\n      page: 1,\n    });\n  };\n\n  render() {\n    const { total, perPage, page } = this.state;\n\n    return (\n      <div className=\"content\">\n        <h1>Pagination</h1>\n\n        <div className=\"filter\">\n          <div>\n            <span>PerPage:</span>\n            <select\n              name=\"perPage\"\n              id=\"perPage\"\n              value={perPage}\n              onChange={(e) => {\n                this.onPerPageChange(+e.target.value);\n              }}\n            >\n              <option value=\"3\">3</option>\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n            </select>\n          </div>\n        </div>\n\n        <Pagination\n          total={total}\n          perPage={perPage}\n          page={page}\n          withInfo\n          onPageChange={this.onPageChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}